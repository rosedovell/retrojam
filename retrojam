#!/bin/bash

# Comment out this block if you're a sillyhead
if [[ $EUID -eq 0 ]]; then
  echo "Why are you running me as root, sillyhead?"
  exit 2
fi

NOTESWITHFLATS=(A Bb B C Db D Eb E F Gb G Ab)
NOTESWITHSHARPS=(A A# B C C# D D# E F F# G G#)

# Tunings
TUNING_PREFIX=Tuning_
DEFAULTTUNING=Standard
TUNINGS=(
  "Standard"
  "Drop D"
)
Standard=(E B G D A E)
Drop_D=(E B G D A D)

# Root Notes
DEFAULTROOTNOTE=C

# Scale Types
DEFAULTSCALETYPE="Natural Major"
SCALETYPES=(
  "Altered"
  "Blues"
  "Chromatic"
  "Dorian"
  "Harmonic Major"
  "Harmonic Minor"
  "Locrian"
  "Lydian" 
  "Lydian Dominant" 
  "Major Pentatonic"
  "Melodic Minor"
  "Minor Pentatonic"
  "Mixolydian"
  "Mixolydian b6"
  "Natural Major"
  "Natural Minor"
  "Octatonic"
  "Phrygian"
  "Phrygian Dominant"
  "Whole Tone"
)
Altered=(1 2 1 2 2 2)
Blues=(3 2 1 1 3)
Chromatic=(1 1 1 1 1 1 1 1 1 1 1)
Dorian=(2 1 2 2 2 1)
Harmonic_Major=(2 2 1 2 1 3)
Harmonic_Minor=(2 1 2 2 1 3)
Locrian=(1 2 2 1 2 2)
Lydian=(2 2 2 1 2 2)
Lydian_Dominant=(2 2 2 1 2 1)
Major_Pentatonic=(2 2 3 2)
Melodic_Minor=(2 1 2 2 2 2)
Minor_Pentatonic=(3 2 2 3)
Mixolydian=(2 2 1 2 2 1)
Mixolydian_b6=(2 2 1 2 1 2)
Natural_Major=(2 2 1 2 2 2 1)
Natural_Minor=(2 1 2 2 1 2 2)
Octatonic=(2 1 2 1 2 1 2)
Phrygian=(1 2 2 2 1 2)
Phrygian_Dominant=(1 3 1 2 1 2)
Whole_Tone=(2 2 2 2 2)

function generate_scale {
  NOTES=()
  rootnote="$1"
  scaletype="$2"
  scale=("$rootnote")
  eval scale_alias=( \"\${${scaletype}[@]}\" )
  sharpflatdisplay=`grep ^SHARPFLATDISPLAY $CONFIGFILE | sed 's/.*=//'`
  if [[ "$sharpflatdisplay" = "Sharps" ]]; then
    for note in ${NOTESWITHSHARPS[@]}; do
      NOTES+=("$note")
    done
  else
    for note in ${NOTESWITHFLATS[@]}; do
      NOTES+=("$note")
    done
  fi
  note_index=0
  # Get index of root note
  for note in ${NOTES[@]}; do
    if [[ "$note" = "$rootnote" ]]; then
      root_index=$note_index
    fi
  note_index=$((note_index+1))
  done
  cur_index=$root_index
  for movement in ${scale_alias[@]}; do
    cur_index=$((cur_index+movement))
    if [[ "$cur_index" -gt 11 ]]; then
      cur_index=$((cur_index-12))
    fi
    if [[ "$cur_index" = "$root_index" ]]; then
      break
    fi
    scale+=("${NOTES[$cur_index]}")
  done
}

function show_fretboard {
  clear
  rootnote="$1"
  scaletype="$2"
  tuning="$3"
  eval tuning_alias=( \"\${${tuning}[@]}\" )
  dispscaletype=`echo "$scaletype" | tr '_' ' '`
  echo "Showing notes for $rootnote $dispscaletype:"
  echo ""
  line=""
  echo "0 |-------1|-------2|-------3|-------4|-------5|-------6|-------7|-------8|-------9|------10|------11|------"
  echo ""
  for string in ${tuning_alias[@]}; do
    if [[ "${scale[@]}" =~ "$string" ]]; then
      echo "$string" | grep '#\|b' > /dev/null
      if [ $? -eq 0 ]; then
        line="$string|------"
      else
        line="$string |------"
      fi
    else
      line="  |------"
    fi
    # Get index of the string's 0 fret in NOTES
    note_index=0
    for note in "${NOTES[@]}"; do
      if [[ "$note" = "$string" ]]; then
        break
      fi
      note_index=$((note_index+1))
    done
    # Increment once to get to fret 1
    note_index=$((note_index+1))

    fret_index=1
    while [[ "$fret_index" -lt 12 ]]; do
      note="${NOTES[$note_index]}"
      dispnote="--"
      if [[ " ${scale[@]} " =~ "$note" ]]; then 
        echo "$note" | grep '#\|b' > /dev/null
	if [ $? -eq 0 ]; then
          dispnote="$note"
	else
	  dispnote="-$note"
	fi
      fi
      line="$line$dispnote|------"
      fret_index=$((fret_index+1))
      note_index=$((note_index+1))
      if [[ "$note_index" -gt 11 ]]; then
        note_index=$((note_index-12))
      fi
    done
    echo "$line"
  done
  echo ""
  read -p "Press any key to return to the main menu."
}

# Generate default config if needed
CONFIGFILE="$HOME/.config/retrojam/config"
CONFIGDIR=`dirname $CONFIGFILE`
if [ ! -d $CONFIGDIR ]; then
  mkdir -p $CONFIGDIR
fi
if [ ! -f $CONFIGFILE ]; then
  cat <<EOF > $CONFIGFILE
ROOTNOTE=$DEFAULTROOTNOTE
SCALETYPE=$DEFAULTSCALETYPE
SHARPFLATDISPLAY=Sharps
TUNING=$DEFAULTTUNING
EOF
fi

function retune_menu {
  clear
  PS3="Enter the number for your desired tuning: "
  select tuning_choice in "${TUNINGS[@]}"; do
    sed -i "s/^TUNING=.*/TUNING=$tuning_choice/" $CONFIGFILE
    break
  done
}

function choose_notes {
  NOTES=()
  sharpflatdisplay=`grep ^SHARPFLATDISPLAY $CONFIGFILE | sed 's/.*=//'`
  if [[ "$sharpflatdisplay" = "Sharps" ]]; then
    for note in ${NOTESWITHSHARPS[@]}; do
      NOTES+=("$note")
    done
  else
    for note in ${NOTESWITHFLATS[@]}; do
      NOTES+=("$note")
    done
  fi
}

function scale_type_menu {
  clear
  echo "Reference:"
  echo "=========="
  echo "Major scales have a major third which makes them feel happy or bright."
  echo "Major scales include Natural Major, Mixolydian, Lydian, Lydian Dominant, Phrygian Dominant, Harmonic Major, and Mixolydian b6."
  echo ""
  echo "Minor scales have a flat third which gives them a darker and more tragic feel."
  echo "Minor scales include Natural Minor, Dorian, Harmonic Minor, Melodic Minor, Phrygian, and Locrian."
  echo ""
  echo "Blues and Altered scales are neither major nor minor."
  echo ""
  echo "Pentatonic scales consist of five notes."
  echo "Pentatonic scales include Major Pentatonic and Minor Pentatonic."
  echo ""
  echo "Synthetic scales are based on regular, symmetric patterns."
  echo "Synthetic scales include Chromatic, Whole Tone and Octatonic."
  echo "=========================================================================================================="
  echo ""
  echo ""
  echo ""
  PS3="Enter the number for your desired scale type: "
  select scale_type_choice in "${SCALETYPES[@]}"; do
    sed -i "s/^SCALETYPE=.*/SCALETYPE=$scale_type_choice/" $CONFIGFILE
    break
  done
}

function root_note_menu {
  clear
  choose_notes
  PS3="Enter the number for your desired root note: "
  select root_note_choice in "${NOTES[@]}"; do
    sed -i "s/^ROOTNOTE=.*/ROOTNOTE=$root_note_choice/" $CONFIGFILE
    break
  done
}
  
function main_menu {
  clear
  echo "\

██████╗ ███████╗████████╗██████╗  ██████╗      ██╗ █████╗ ███╗   ███╗
██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔═══██╗     ██║██╔══██╗████╗ ████║
██████╔╝█████╗     ██║   ██████╔╝██║   ██║     ██║███████║██╔████╔██║
██╔══██╗██╔══╝     ██║   ██╔══██╗██║   ██║██   ██║██╔══██║██║╚██╔╝██║
██║  ██║███████╗   ██║   ██║  ██║╚██████╔╝╚█████╔╝██║  ██║██║ ╚═╝ ██║
╚═╝  ╚═╝╚══════╝   ╚═╝   ╚═╝  ╚═╝ ╚═════╝  ╚════╝ ╚═╝  ╚═╝╚═╝     ╚═╝"

  tuning=`grep ^TUNING $CONFIGFILE | sed 's/.*=//'`
  rootnote=`grep ^ROOTNOTE $CONFIGFILE | sed 's/.*=//'`
  sharpflatdisplay=`grep ^SHARPFLATDISPLAY $CONFIGFILE | sed 's/.*=//'`
  scaletype=`grep ^SCALETYPE $CONFIGFILE | sed 's/.*=//'`

  echo ""
  echo "Current Settings:"
  echo "================="
  echo "Tuning: $tuning"
  tuning=`echo $tuning | tr ' ' '_'`
  echo "Root Note: $rootnote"
  echo "Scale Type: $scaletype"
  scaletype=`echo $scaletype | tr ' ' '_'`
  generate_scale "$rootnote" "$scaletype"
  echo "Scale Notes: ${scale[@]}"
  echo ""

  echo "Main menu"
  echo "========="
  PS3="Enter the number for your menu selection: "
  select choice in \
    Play\
    "Change Root Note"\
    "Change Scale Type"\
    Retune\
    "Toggle: Show Sharp or Flat Notes. Currently showing $sharpflatdisplay"\
    Quit; do

    case $choice in
      Play)
        show_fretboard "$rootnote" "$scaletype" "$tuning"
	break
        ;;
      "Change Root Note")
        root_note_menu
        break
        ;;
      "Change Scale Type") 
	scale_type_menu
	break
        ;;
      Retune)
        retune_menu
	break
        ;;
"Toggle: Show Sharp or Flat Notes. Currently showing $sharpflatdisplay")
        if [[ "$sharpflatdisplay" = "Sharps" ]]; then 
	  sharpflatdisplay="Flats"
	else
	  sharpflatdisplay="Sharps"
	fi
        sed -i "s/^SHARPFLATDISPLAY=.*/SHARPFLATDISPLAY=$sharpflatdisplay/" $CONFIGFILE
	choose_notes

	# Translate flat root note to sharp
        echo $rootnote | grep 'b' > /dev/null
	if [ $? -eq 0 ]; then
          index=0
          for val in ${NOTESWITHFLATS[@]}; do
            if [[ "$val" = "$rootnote" ]]; then
              rootnote="${NOTESWITHSHARPS[$index]}"
	      sed -i "s/^ROOTNOTE=.*/ROOTNOTE=$rootnote/" $CONFIGFILE
	      break
	    fi
            index=$((index+1))   
	  done
          break
	fi
	
	# Translate sharp root note to flat
        echo $rootnote | grep '#' > /dev/null
	if [ $? -eq 0 ]; then
          index=0
          for val in ${NOTESWITHSHARPS[@]}; do
            if [[ "$val" = "$rootnote" ]]; then
              rootnote="${NOTESWITHFLATS[$index]}"
	      sed -i "s/^ROOTNOTE=.*/ROOTNOTE=$rootnote/" $CONFIGFILE
	      break
	    fi
            index=$((index+1))   
	  done
	fi
    	break
	;;
      Quit)
        exit 0
        ;;
      *)
        echo "Invalid option $REPLY"
        ;;
    esac
  done
}

choose_notes
while : ;do
  main_menu
done
